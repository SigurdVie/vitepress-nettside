import { defineComponent as T, openBlock as t, createElementBlock as r, createBlock as U, resolveDynamicComponent as N, withCtx as J, createElementVNode as a, normalizeStyle as P, toDisplayString as m, createCommentVNode as p, createVNode as M, unref as h, renderSlot as te, computed as f, createTextVNode as V, inject as H, ref as L, Fragment as O, renderList as j, mergeProps as ae, watch as ne, onMounted as Q, normalizeClass as re, onUnmounted as ue, nextTick as me, withModifiers as K, withDirectives as X, vModelText as ee } from "vue";
import { Icon as F } from "@iconify/vue";
import { useData as he } from "vitepress";
const fe = { class: "horizontal-card" }, pe = { class: "card-content" }, ye = { class: "card-info" }, _e = { class: "card-meta" }, ge = {
  key: 0,
  class: "card-author"
}, ve = {
  key: 1,
  class: "card-date"
}, ke = {
  key: 0,
  class: "card-tags"
}, $e = { class: "tag" }, we = {
  key: 0,
  class: "card-image"
}, Ce = ["src"], be = /* @__PURE__ */ T({
  __name: "HorizontalCard",
  props: {
    title: {},
    excerpt: {},
    author: {},
    date: {},
    image: {},
    category: {},
    url: {},
    hideAuthor: { type: Boolean },
    hideDate: { type: Boolean },
    hideImage: { type: Boolean },
    hideCategory: { type: Boolean },
    hideDomain: { type: Boolean },
    disableLinks: { type: Boolean },
    isExternal: { type: Boolean },
    titleLines: {},
    excerptLines: {}
  },
  setup(c) {
    return (e, o) => (t(), r("div", fe, [
      (t(), U(N(e.disableLinks ? "div" : "a"), {
        href: e.disableLinks ? null : e.url,
        class: "card-link"
      }, {
        default: J(() => [
          a("div", pe, [
            a("div", ye, [
              a("div", {
                class: "card-title",
                style: P({ "--line-clamp-title": e.titleLines || 2 })
              }, m(e.title), 5),
              a("div", _e, [
                e.hideAuthor ? p("", !0) : (t(), r("span", ge, "By " + m(e.author), 1)),
                e.hideDate ? p("", !0) : (t(), r("span", ve, m(e.date), 1))
              ]),
              a("div", {
                class: "card-excerpt",
                style: P({ "--line-clamp-excerpt": e.excerptLines || 5 })
              }, m(e.excerpt), 5),
              e.hideCategory ? p("", !0) : (t(), r("div", ke, [
                a("span", $e, m(e.category), 1)
              ]))
            ]),
            e.image && !e.hideImage ? (t(), r("div", we, [
              a("img", {
                src: e.image,
                alt: "Banner"
              }, null, 8, Ce)
            ])) : p("", !0)
          ])
        ]),
        _: 1
      }, 8, ["href"]))
    ]));
  }
}), x = (c, e) => {
  const o = c.__vccOpts || c;
  for (const [l, n] of e)
    o[l] = n;
  return o;
}, se = /* @__PURE__ */ x(be, [["__scopeId", "data-v-30940f18"]]), De = { class: "card" }, Le = {
  key: 0,
  class: "card-image"
}, xe = ["src"], Ie = { class: "card-info" }, Te = { class: "card-meta" }, Se = {
  key: 0,
  class: "card-author"
}, Be = {
  key: 1,
  class: "post-date"
}, Ae = {
  key: 0,
  class: "card-tags"
}, Ee = { class: "tag" }, Ue = {
  key: 1,
  class: "card-footer"
}, Pe = { class: "footer-content" }, Re = /* @__PURE__ */ T({
  __name: "VerticalCard",
  props: {
    title: {},
    excerpt: {},
    author: {},
    date: {},
    image: {},
    category: {},
    url: {},
    hideAuthor: { type: Boolean },
    hideDate: { type: Boolean },
    hideImage: { type: Boolean },
    hideCategory: { type: Boolean },
    hideDomain: { type: Boolean },
    disableLinks: { type: Boolean },
    isExternal: { type: Boolean },
    titleLines: {},
    excerptLines: {}
  },
  setup(c) {
    return (e, o) => (t(), r("div", De, [
      (t(), U(N(e.disableLinks ? "div" : "a"), {
        href: e.disableLinks ? null : e.url,
        class: "card-link"
      }, {
        default: J(() => [
          e.image && !e.hideImage ? (t(), r("div", Le, [
            a("img", {
              src: e.image,
              alt: "Banner Image"
            }, null, 8, xe)
          ])) : p("", !0),
          a("div", Ie, [
            a("h3", {
              class: "card-title",
              style: P({ "--line-clamp-title": e.titleLines || 2 })
            }, m(e.title), 5),
            a("div", Te, [
              !e.hideAuthor && e.author ? (t(), r("span", Se, "by " + m(e.author), 1)) : p("", !0),
              e.hideDate ? p("", !0) : (t(), r("span", Be, m(e.date), 1))
            ]),
            a("p", {
              class: "card-body",
              style: P({ "--line-clamp-excerpt": e.excerptLines || 3 })
            }, m(e.excerpt), 5),
            !e.hideCategory && e.category ? (t(), r("div", Ae, [
              a("span", Ee, m(e.category), 1)
            ])) : p("", !0)
          ]),
          e.isExternal && !e.hideDomain ? (t(), r("div", Ue, [
            a("div", Pe, [
              M(h(F), {
                icon: "gridicons:external",
                class: "external-icon"
              })
            ])
          ])) : p("", !0)
        ]),
        _: 1
      }, 8, ["href"]))
    ]));
  }
}), Y = /* @__PURE__ */ x(Re, [["__scopeId", "data-v-b0af8a26"]]), Oe = {}, je = { class: "cards-container" };
function Me(c, e) {
  return t(), r("div", je, [
    te(c.$slots, "default", {}, void 0, !0)
  ]);
}
const oe = /* @__PURE__ */ x(Oe, [["render", Me], ["__scopeId", "data-v-33f4120e"]]), Ve = {}, Fe = { class: "cards-container" };
function Ne(c, e) {
  return t(), r("div", Fe, [
    te(c.$slots, "default", {}, void 0, !0)
  ]);
}
const G = /* @__PURE__ */ x(Ve, [["render", Ne], ["__scopeId", "data-v-08d93c93"]]), He = { class: "top-bar" }, ze = { class: "title-date-container" }, qe = ["innerHTML"], We = /* @__PURE__ */ T({
  __name: "HeaderCard",
  props: {
    title: {},
    date: { default: "" },
    time: { default: "" },
    titleLines: { default: 2 },
    link: {},
    dateFormat: { default: "long" },
    dateTimeDescription: {}
  },
  setup(c) {
    const e = c, o = f(() => {
      let l = "";
      if (e.date) {
        const n = new Date(e.date);
        if (isNaN(n.getTime()))
          l = e.date;
        else if (e.dateFormat === "iso")
          l = n.toISOString().split("T")[0];
        else {
          const u = {
            year: "numeric",
            month: "long",
            day: "numeric"
          };
          l = n.toLocaleDateString(void 0, u);
        }
      }
      if (e.time) {
        const n = e.time.match(
          /^([0-1]?[0-9]|2[0-3]):([0-5][0-9])(?::([0-5][0-9]))?$/
        );
        if (n) {
          const [, u, _] = n, w = `${u.padStart(2, "0")}:${_}`;
          l = l ? `${l} at ${w}` : w;
        }
      }
      return e.dateTimeDescription && l ? `${e.dateTimeDescription} ${l}` : l;
    });
    return (l, n) => (t(), r("div", He, [
      a("div", ze, [
        (t(), U(N(l.link ? "a" : "span"), {
          class: "gallery-title",
          href: l.link || void 0
        }, {
          default: J(() => [
            V(m(l.title), 1)
          ]),
          _: 1
        }, 8, ["href"])),
        o.value ? (t(), r("span", {
          key: 0,
          class: "gallery-date",
          innerHTML: o.value
        }, null, 8, qe)) : p("", !0)
      ])
    ]));
  }
}), Z = /* @__PURE__ */ x(We, [["__scopeId", "data-v-ba68ecf4"]]), Je = ["href"], Ge = { class: "post-header" }, Ke = {
  key: 0,
  class: "post-title"
}, Ye = ["src"], Qe = { class: "post-info" }, Ze = {
  key: 0,
  class: "author-section"
}, Xe = ["src"], et = { class: "author-details" }, tt = ["href"], at = { class: "author-description" }, nt = { class: "meta-data" }, rt = { key: 0 }, st = { key: 1 }, ot = /* @__PURE__ */ T({
  __name: "BlogPostHeader",
  props: {
    returnLink: {},
    returnText: {},
    hideTitle: { type: Boolean },
    hideDate: { type: Boolean },
    hideAuthor: { type: Boolean },
    hideCategory: { type: Boolean },
    hideBanner: { type: Boolean },
    authorsDataKey: {}
  },
  setup(c) {
    const e = c, o = e.authorsDataKey || "authors", l = H(o) || {}, { page: n } = he(), u = n.value.frontmatter, _ = L(l[u.author || ""] || { name: "" }), w = L(
      e.returnLink || u.returnLinkValue || "/"
    ), C = L(
      "← " + (e.returnText || u.returnTextValue || "Back Home")
    );
    return (D, y) => (t(), r(O, null, [
      a("a", {
        class: "return-text",
        href: w.value
      }, m(C.value), 9, Je),
      a("header", Ge, [
        e.hideTitle ? p("", !0) : (t(), r("h1", Ke, m(h(u).title), 1)),
        !e.hideBanner && h(u).banner ? (t(), r("img", {
          key: 1,
          src: h(u).banner,
          alt: "Banner Image",
          class: "banner-image"
        }, null, 8, Ye)) : p("", !0),
        a("div", Qe, [
          !e.hideAuthor && _.value.name ? (t(), r("div", Ze, [
            a("img", {
              src: _.value.avatar,
              alt: "Author's Avatar",
              class: "author-avatar"
            }, null, 8, Xe),
            a("div", et, [
              a("a", {
                href: _.value.url,
                class: "author-name"
              }, m(_.value.name), 9, tt),
              a("p", at, m(_.value.description), 1)
            ])
          ])) : p("", !0),
          a("div", nt, [
            !e.hideDate && h(u).date ? (t(), r("p", rt, m(new Date(h(u).date).toLocaleDateString(void 0, {
              year: "numeric",
              month: "long",
              day: "numeric"
            })), 1)) : p("", !0),
            !e.hideCategory && h(u).category ? (t(), r("p", st, " Category: " + m(h(u).category), 1)) : p("", !0)
          ])
        ])
      ])
    ], 64));
  }
}), it = /* @__PURE__ */ x(ot, [["__scopeId", "data-v-c3a645d3"]]);
function lt(c) {
  const e = new Date(c);
  return typeof c == "string" && !c.includes("T") ? (/* @__PURE__ */ new Date(c + "T00:00:00")).toLocaleDateString(
    "en-US",
    {
      timeZone: "UTC",
      year: "numeric",
      month: "long",
      day: "numeric"
    }
  ) : e.toLocaleDateString(void 0, {
    timeZone: "UTC",
    year: "numeric",
    month: "long",
    day: "numeric"
  });
}
const ct = { class: "blog-post-list-container" }, dt = { key: 0 }, ut = /* @__PURE__ */ T({
  __name: "BlogPostList",
  props: {
    posts: {},
    format: {},
    sortOrder: {},
    startDate: {},
    endDate: {},
    renderDrafts: { type: Boolean },
    featuredOnly: { type: Boolean },
    filterAuthors: {},
    excludeAuthors: {},
    filterCategories: {},
    excludeCategories: {},
    excludeURLs: {},
    maxCards: {},
    hideAuthor: { type: Boolean },
    hideDate: { type: Boolean },
    hideImage: { type: Boolean },
    hideCategory: { type: Boolean },
    hideDomain: { type: Boolean },
    disableLinks: { type: Boolean },
    titleLines: {},
    excerptLines: {},
    postsDataKey: {},
    authorsDataKey: {}
  },
  setup(c) {
    const e = c, o = H(e.postsDataKey || "postsData", []), l = H(e.authorsDataKey || "authors", {}), n = f(() => e.posts || o), u = f(() => {
      switch (e.format) {
        case "horizontal":
          return se;
        case "vertical":
          return Y;
        default:
          return Y;
      }
    }), _ = f(() => {
      switch (e.format) {
        case "horizontal":
          return oe;
        case "vertical":
          return G;
        default:
          return G;
      }
    }), w = f(() => {
      const s = [...n.value];
      return s.sort(($, b) => {
        const A = new Date($.frontmatter.date).getTime(), d = new Date(b.frontmatter.date).getTime();
        return e.sortOrder === "ascending" ? A - d : d - A;
      }), s;
    }), C = f(() => w.value.filter((s) => {
      const { frontmatter: $ } = s;
      if (e.featuredOnly && !$.featured || !e.renderDrafts && $.draft) return !1;
      const b = new Date($.date).getTime();
      if (e.startDate && b < new Date(e.startDate).getTime() || e.endDate && b > new Date(e.endDate).getTime() || e.filterAuthors?.length && !e.filterAuthors.includes($.author || "") || e.excludeAuthors?.length && e.excludeAuthors.includes($.author || "") || e.filterCategories?.length && !e.filterCategories.includes($.category || "") || e.excludeCategories?.length && e.excludeCategories.includes($.category || ""))
        return !1;
      if (e.excludeURLs?.length) {
        const A = s.url.replace(/\.html$/, "");
        if (e.excludeURLs.some((I) => I.replace(/\.html$/, "") === A)) return !1;
      }
      return !0;
    })), D = f(() => e.maxCards != null && e.maxCards >= 0 ? C.value.slice(0, e.maxCards) : C.value);
    function y(s) {
      const $ = l[s];
      return $ ? $.name : s;
    }
    function i(s) {
      return {
        title: s.frontmatter.title,
        excerpt: s.frontmatter.excerpt,
        url: s.url,
        hideDomain: e.hideDomain,
        isExternal: !1,
        author: y(s.frontmatter.author || ""),
        date: lt(s.frontmatter.date),
        image: s.frontmatter.banner,
        category: s.frontmatter.category,
        hideAuthor: e.hideAuthor,
        hideDate: e.hideDate,
        hideImage: e.hideImage,
        hideCategory: e.hideCategory,
        disableLinks: e.disableLinks,
        titleLines: e.titleLines,
        excerptLines: e.excerptLines
      };
    }
    return (s, $) => (t(), r("div", ct, [
      s.format === "debug" ? (t(), r("div", dt, [
        a("pre", null, m(JSON.stringify(D.value, null, 2)), 1)
      ])) : p("", !0),
      (t(), U(N(_.value), { class: "cards-container" }, {
        default: J(() => [
          (t(!0), r(O, null, j(D.value, (b) => (t(), U(N(u.value), ae({
            key: b.url,
            ref_for: !0
          }, i(b)), null, 16))), 128))
        ]),
        _: 1
      }))
    ]));
  }
}), mt = /* @__PURE__ */ x(ut, [["__scopeId", "data-v-022d41ed"]]), ht = /* @__PURE__ */ T({
  __name: "TextCell",
  props: {
    value: {}
  },
  setup(c) {
    return (e, o) => (t(), r("span", null, m(e.value), 1));
  }
}), ft = { class: "link-cell" }, pt = ["href"], yt = ["href"], _t = /* @__PURE__ */ T({
  __name: "LinkCell",
  props: {
    value: {},
    internalIcon: {},
    externalIcon: {},
    internalText: {},
    externalText: {},
    displayInternalAs: {},
    displayExternalAs: {},
    width: {},
    height: {},
    iconColorMap: {},
    defaultIconColor: {}
  },
  setup(c) {
    const e = c, o = f(() => e.value?.startsWith("/") || !1), l = f(() => !!e.value), n = f(() => e.value), u = f(
      () => o.value ? e.internalIcon || "material-symbols:link-rounded" : e.externalIcon || "majesticons:open"
    ), _ = f(
      () => o.value ? e.iconColorMap?.internal || e.defaultIconColor || "var(--vp-c-brand)" : e.iconColorMap?.external || e.defaultIconColor || "var(--vp-c-orange)"
    ), w = f(
      () => o.value ? e.displayInternalAs || "icon" : e.displayExternalAs || "icon"
    ), C = f(
      () => o.value ? e.internalText || "Open Page" : e.externalText || "Open Link"
    ), D = f(() => e.width || "1.5em"), y = f(() => e.height || "1.5em");
    return (i, s) => (t(), r("div", ft, [
      l.value && w.value === "icon" ? (t(), r("a", {
        key: 0,
        href: n.value,
        target: "_blank",
        rel: "noopener noreferrer",
        class: "icon-link"
      }, [
        M(h(F), {
          icon: u.value,
          style: P({ color: _.value, width: D.value, height: y.value }),
          class: "icon"
        }, null, 8, ["icon", "style"])
      ], 8, pt)) : l.value && w.value === "text" ? (t(), r("a", {
        key: 1,
        href: n.value,
        target: "_blank",
        rel: "noopener noreferrer",
        class: "text-link"
      }, m(C.value), 9, yt)) : p("", !0)
    ]));
  }
}), gt = /* @__PURE__ */ x(_t, [["__scopeId", "data-v-38e44808"]]), vt = { class: "boolean-cell" }, kt = {
  key: 0,
  class: "icon-container"
}, $t = {
  key: 1,
  class: "text-container"
}, wt = {
  key: 2,
  class: "default-container"
}, Ct = "ic:twotone-check-box", bt = "material-symbols:close-rounded", Dt = "True", Lt = "False", xt = /* @__PURE__ */ T({
  __name: "BooleanCell",
  props: {
    value: { type: Boolean },
    trueColor: {},
    falseColor: {},
    displayAs: {},
    trueIcon: {},
    falseIcon: {},
    trueText: {},
    falseText: {},
    iconWidth: {},
    iconHeight: {}
  },
  setup(c) {
    const e = c, o = e.trueIcon || Ct, l = e.falseIcon || bt, n = e.trueText || Dt, u = e.falseText || Lt, _ = e.trueColor || "var(--vp-c-green-3)", w = e.falseColor || "var(--vp-c-red-3)", C = e.iconWidth || "1.5em", D = e.iconHeight || "1.5em", y = e.displayAs || "icon";
    return (i, s) => (t(), r("div", vt, [
      h(y) === "icon" ? (t(), r("div", kt, [
        M(h(F), {
          icon: i.value ? h(o) : h(l),
          style: P({
            color: i.value ? h(_) : h(w),
            width: h(C),
            height: h(D)
          }),
          class: "icon"
        }, null, 8, ["icon", "style"])
      ])) : h(y) === "text" ? (t(), r("div", $t, [
        a("span", {
          style: P({ color: i.value ? h(_) : h(w) })
        }, m(i.value ? h(n) : h(u)), 5)
      ])) : (t(), r("div", wt, [
        a("span", null, m(i.value), 1)
      ]))
    ]));
  }
}), It = /* @__PURE__ */ x(xt, [["__scopeId", "data-v-e6763927"]]), Tt = { class: "badge-container" }, St = /* @__PURE__ */ T({
  __name: "TagsCell",
  props: {
    value: {},
    tagColors: {},
    defaultTagColor: {}
  },
  setup(c) {
    const e = c, o = e.defaultTagColor || "var(--vp-c-brand-soft)", l = e.tagColors || {};
    return (n, u) => (t(), r("div", Tt, [
      (t(!0), r(O, null, j(n.value, (_) => (t(), r("span", {
        key: _,
        class: "badge",
        style: P({ backgroundColor: h(l)[_] || h(o) })
      }, m(_), 5))), 128))
    ]));
  }
}), Bt = /* @__PURE__ */ x(St, [["__scopeId", "data-v-f5365c48"]]), At = { class: "number-cell" }, Et = /* @__PURE__ */ T({
  __name: "NumberCell",
  props: {
    value: {},
    decimals: {},
    formatter: { type: Function }
  },
  setup(c) {
    const e = c, o = f(() => {
      if (e.formatter && typeof e.formatter == "function")
        return e.formatter(e.value);
      const n = e.value % 1 !== 0 ? e.decimals ?? 2 : 0;
      return e.value.toLocaleString(void 0, {
        minimumFractionDigits: n,
        maximumFractionDigits: n
      });
    });
    return (l, n) => (t(), r("div", At, [
      a("span", null, m(o.value), 1)
    ]));
  }
}), Ut = /* @__PURE__ */ x(Et, [["__scopeId", "data-v-fca0a933"]]), Pt = { class: "icon-cell" }, Rt = { key: 1 }, Ot = /* @__PURE__ */ T({
  __name: "IconCell",
  props: {
    value: {},
    iconMap: {},
    defaultIcon: {},
    iconColorMap: {},
    defaultIconColor: {},
    width: {},
    height: {}
  },
  setup(c) {
    const e = c, o = f(() => e.iconMap?.[e.value] || e.defaultIcon), l = f(
      () => e.iconColorMap?.[e.value] || e.defaultIconColor || "var(--vp-c-brand)"
    ), n = f(() => e.width || "1.5em"), u = f(() => e.height || "1.5em");
    return (_, w) => (t(), r("div", Pt, [
      o.value ? (t(), U(h(F), {
        key: 0,
        icon: o.value,
        style: P({ color: l.value, width: n.value, height: u.value }),
        class: "icon"
      }, null, 8, ["icon", "style"])) : (t(), r("span", Rt, m(_.value), 1))
    ]));
  }
}), jt = /* @__PURE__ */ x(Ot, [["__scopeId", "data-v-e4d1a333"]]), Mt = {
  key: 0,
  class: "title"
}, Vt = { class: "table-container" }, Ft = {
  key: 0,
  class: "styled-table"
}, Nt = ["onClick"], Ht = { key: 0 }, zt = { key: 1 }, qt = /* @__PURE__ */ T({
  __name: "JSONTable",
  props: {
    jsonPath: {},
    jsonDataProp: {},
    columns: {},
    filters: {},
    title: {},
    defaultSortField: {},
    defaultSortDirection: {}
  },
  setup(c) {
    const e = c, o = L([]), l = L(e.defaultSortField || null), n = L(e.defaultSortDirection === "ascending"), u = L(e.columns || []), _ = L(e.filters || null), w = e.title;
    function C(d, I) {
      return I.split(".").reduce(
        (v, S) => v && v[S] !== void 0 ? v[S] : null,
        d
      );
    }
    function D(d) {
      switch (d) {
        case "link":
          return gt;
        case "boolean":
          return It;
        case "tags":
          return Bt;
        case "number":
          return Ut;
        case "icon":
          return jt;
        default:
          return ht;
      }
    }
    function y(d) {
      l.value === d ? n.value = !n.value : (l.value = d, n.value = !0);
    }
    const i = f(() => {
      let d = s.value;
      return l.value ? d.slice().sort((I, v) => {
        const S = C(I, l.value), E = C(v, l.value);
        return S == null ? 1 : E == null ? -1 : S < E ? n.value ? -1 : 1 : S > E ? n.value ? 1 : -1 : 0;
      }) : d;
    }), s = f(() => _.value ? o.value.filter((d) => $(_.value, d)) : o.value);
    function $(d, I) {
      if (d.type === "and" || d.type === "or") {
        const v = d, S = d.type === "and" ? "every" : "some";
        return v.conditions[S]((E) => $(E, I));
      } else if (d.type === "condition") {
        const v = d, S = C(I, v.key);
        return b(S, v.operator, v.value);
      } else
        return console.warn("Unknown filter type:", d.type), !0;
    }
    function b(d, I, v) {
      switch (I) {
        case "equals":
          return d === v;
        case "notEquals":
          return d !== v;
        case "greaterThan":
          return d > v;
        case "greaterThanOrEqual":
          return d >= v;
        case "lessThan":
          return d < v;
        case "lessThanOrEqual":
          return d <= v;
        case "includes":
          return Array.isArray(d) && d.includes(v);
        case "notIncludes":
          return Array.isArray(d) && !d.includes(v);
        case "contains":
          return typeof d == "string" && d.includes(v);
        case "notContains":
          return typeof d == "string" && !d.includes(v);
        default:
          return console.warn("Unknown operator:", I), !1;
      }
    }
    async function A() {
      if (e.jsonPath)
        try {
          const d = await fetch(e.jsonPath);
          o.value = await d.json(), e.defaultSortField && (l.value = e.defaultSortField, n.value = e.defaultSortDirection === "ascending");
        } catch (d) {
          console.error("Error fetching JSON:", d);
        }
    }
    return ne(
      () => e.jsonDataProp,
      (d) => {
        if (d && d.length) {
          if (o.value = d, u.value.length === 0 && d.length) {
            const I = d[0];
            u.value = Object.keys(I).map((v) => ({
              key: v,
              title: v,
              format: "text"
            }));
          }
          e.defaultSortField && (l.value = e.defaultSortField, n.value = e.defaultSortDirection === "ascending");
        } else e.jsonPath && A();
      },
      { immediate: !0 }
    ), Q(() => {
      !e.jsonDataProp || !e.jsonDataProp.length ? A() : (o.value = e.jsonDataProp, e.defaultSortField && (l.value = e.defaultSortField, n.value = e.defaultSortDirection === "ascending"));
    }), (d, I) => (t(), r("div", null, [
      h(w) ? (t(), r("h3", Mt, m(h(w)), 1)) : p("", !0),
      a("div", Vt, [
        i.value.length && u.value.length ? (t(), r("table", Ft, [
          a("thead", null, [
            a("tr", null, [
              (t(!0), r(O, null, j(u.value, (v) => (t(), r("th", {
                key: v.key,
                onClick: (S) => y(v.key),
                class: re({ sortable: !0, active: l.value === v.key })
              }, [
                V(m(v.title || v.key) + " ", 1),
                l.value === v.key ? (t(), r("span", Ht, m(n.value ? "↑" : "↓"), 1)) : p("", !0)
              ], 10, Nt))), 128))
            ])
          ]),
          a("tbody", null, [
            (t(!0), r(O, null, j(i.value, (v, S) => (t(), r("tr", { key: S }, [
              (t(!0), r(O, null, j(u.value, (E) => (t(), r("td", {
                key: E.key
              }, [
                (t(), U(N(D(E.format || "text")), ae({
                  value: C(v, E.key),
                  ref_for: !0
                }, E.options), null, 16, ["value"]))
              ]))), 128))
            ]))), 128))
          ])
        ])) : (t(), r("div", zt, "No data available"))
      ])
    ]));
  }
}), Wt = /* @__PURE__ */ x(qt, [["__scopeId", "data-v-ebd38ee2"]]), Jt = { class: "image-card-square" }, Gt = ["href", "data-pswp-width", "data-pswp-height"], Kt = ["src"], Yt = /* @__PURE__ */ T({
  __name: "ImageCardSquare",
  props: {
    image: {}
  },
  setup(c) {
    const e = L(0), o = L(0), l = (n) => {
      const u = n.target;
      e.value = u.naturalWidth, o.value = u.naturalHeight;
    };
    return (n, u) => (t(), r("div", Jt, [
      a("a", {
        href: n.image,
        "data-pswp-width": e.value,
        "data-pswp-height": o.value,
        target: "_blank",
        class: "image-card-square"
      }, [
        a("img", {
          src: n.image,
          alt: "Gallery Image",
          onLoad: l
        }, null, 40, Kt)
      ], 8, Gt)
    ]));
  }
}), ie = /* @__PURE__ */ x(Yt, [["__scopeId", "data-v-936fac72"]]), Qt = ["href", "data-pswp-width", "data-pswp-height"], Zt = ["src", "alt"], Xt = /* @__PURE__ */ T({
  __name: "ImageCardVertical",
  props: {
    image: {}
  },
  setup(c) {
    const e = L({
      width: 0,
      height: 0
    }), o = (l) => {
      const n = l.target;
      e.value = {
        width: n.naturalWidth,
        height: n.naturalHeight
      };
    };
    return (l, n) => (t(), r("a", {
      href: l.image,
      "data-pswp-width": e.value.width,
      "data-pswp-height": e.value.height,
      target: "_blank",
      class: "vertical-image-card"
    }, [
      a("img", {
        src: l.image,
        alt: l.image,
        onLoad: o
      }, null, 40, Zt)
    ], 8, Qt));
  }
}), ea = /* @__PURE__ */ x(Xt, [["__scopeId", "data-v-8dd93014"]]), ta = { class: "image-gallery-container" }, aa = { key: 0 }, na = {
  key: 0,
  class: "no-images"
}, ra = ["id"], sa = /* @__PURE__ */ T({
  __name: "ImageGallery",
  props: {
    title: {},
    titleLines: { default: 2 },
    date: { default: "" },
    dateFormat: {},
    time: {},
    dateTimeDescription: {},
    link: {},
    folders: {},
    images: {},
    excludeExtensions: {},
    includeExtensions: {},
    format: {},
    galleryDataKey: {},
    forceSort: {},
    layout: { default: "grid" },
    directUrls: {}
  },
  setup(c) {
    const e = L(`gallery-${Math.random().toString(36).substr(2, 9)}`);
    let o = null;
    const l = async () => {
      o && (o.destroy(), o = null), await me();
      const { default: i } = await import("./photoswipe-lightbox.esm-BjTq-zOm.js");
      setTimeout(() => {
        try {
          o = new i({
            gallery: `#${e.value}`,
            children: "a",
            pswpModule: () => import("./photoswipe.esm-DcivMT-M.js")
          }), o.init();
        } catch (s) {
          console.error("PhotoSwipe initialization error:", s);
        }
      }, 100);
    }, n = c, u = H(n.galleryDataKey || "galleryData", []);
    Q(() => {
      l();
    }), ue(() => {
      o && (o.destroy(), o = null);
    }), f(() => {
      const i = {
        year: "numeric",
        month: "long",
        day: "numeric"
      }, s = new Date(n.date);
      return isNaN(s.getTime()) ? n.date : s.toLocaleDateString(void 0, i);
    });
    const _ = f(() => G), w = f(() => n.layout === "grid" ? ie : ea), C = f(() => ({
      "image-grid": n.layout === "grid",
      "image-vertical": n.layout === "vertical"
    })), D = f(() => !n.folders?.length && !n.images?.length ? u.filter((i) => {
      const s = i.filename.split(".").pop()?.toLowerCase();
      return !(n.excludeExtensions?.length && s && n.excludeExtensions.includes(s) || n.includeExtensions?.length && s && !n.includeExtensions.includes(s));
    }) : u.filter((i) => {
      const s = i.filename.split(".").pop()?.toLowerCase();
      if (n.excludeExtensions?.length && s && n.excludeExtensions.includes(s) || n.includeExtensions?.length && s && !n.includeExtensions.includes(s))
        return !1;
      const $ = n.folders?.includes(i.folder) || !1, b = n.images?.includes(i.path) || !1;
      return $ || b;
    })), y = f(() => {
      if (n.directUrls && n.directUrls.length > 0)
        return n.directUrls;
      if (n.forceSort && n.forceSort.length > 0) {
        const i = [...n.forceSort];
        return D.value.forEach((s) => {
          i.includes(s.path) || i.push(s.path);
        }), i;
      }
      return D.value.map((i) => i.path).sort();
    });
    return ne(y, () => {
      l();
    }), (i, s) => (t(), r("div", ta, [
      i.format === "debug" ? (t(), r("div", aa, [
        a("pre", null, m(h(u)), 1)
      ])) : p("", !0),
      (t(), U(N(_.value), { class: "gallery-container" }, {
        default: J(() => [
          M(Z, {
            title: i.title,
            date: i.date,
            "date-format": i.dateFormat,
            time: i.time,
            dateTimeDescription: i.dateTimeDescription,
            "title-lines": i.titleLines,
            link: i.link
          }, null, 8, ["title", "date", "date-format", "time", "dateTimeDescription", "title-lines", "link"]),
          y.value.length === 0 ? (t(), r("div", na, " No images found for this gallery. ")) : (t(), r("div", {
            key: 1,
            class: re(C.value),
            id: e.value
          }, [
            (t(!0), r(O, null, j(y.value, ($, b) => (t(), U(N(w.value), {
              key: b,
              image: $
            }, null, 8, ["image"]))), 128))
          ], 10, ra))
        ]),
        _: 1
      }))
    ]));
  }
}), oa = /* @__PURE__ */ x(sa, [["__scopeId", "data-v-31f1603f"]]), ia = { class: "lemmy-card" }, la = { key: 0 }, ca = {
  key: 0,
  class: "lemmy-card-header"
}, da = {
  key: 0,
  class: "lemmy-card-user-community"
}, ua = { class: "lemmy-user-info" }, ma = ["href"], ha = { class: "lemmy-user-icon" }, fa = ["src"], pa = { class: "lemmy-username" }, ya = {
  key: 1,
  class: "lemmy-separator"
}, _a = ["href"], ga = { class: "lemmy-community-name" }, va = { class: "lemmy-icon-container" }, ka = ["href"], $a = ["href"], wa = { class: "lemmy-card-content" }, Ca = ["src"], ba = {
  key: 1,
  class: "lemmy-card-footer"
}, Da = { class: "lemmy-footer-item" }, La = { class: "lemmy-footer-item" }, xa = {
  key: 2,
  class: "lemmy-post-date"
}, Ia = { class: "lemmy-footer-item" }, Ta = {
  key: 1,
  class: "error-message-container"
}, Sa = { class: "error-message" }, Ba = ["href"], Aa = /* @__PURE__ */ T({
  __name: "EmbedCardLemmy",
  props: {
    url: {},
    hideUser: { type: Boolean },
    hideCommunity: { type: Boolean },
    hideTitle: { type: Boolean },
    hideBanner: { type: Boolean },
    hideExcerpt: { type: Boolean },
    hideScore: { type: Boolean },
    hideComments: { type: Boolean },
    hideDate: { type: Boolean },
    titleLines: {},
    excerptLines: {}
  },
  setup(c) {
    const e = c, o = L("Loading..."), l = L(""), n = L({
      display_name: "",
      name: "",
      avatar: "",
      actor_id: ""
    }), u = L({
      name: "",
      actor_id: ""
    }), _ = new URL(e.url).origin, w = L(""), C = L(null), D = L(0), y = L(0);
    var i = !1;
    const s = f(() => {
      if (!w.value) return "";
      const g = new Date(w.value), k = g.getFullYear(), z = `0${g.getMonth() + 1}`.slice(-2), B = `0${g.getDate()}`.slice(-2);
      return `${k}-${z}-${B}`;
    }), $ = f(() => {
      try {
        return `${new URL(n.value.actor_id).origin}/u/${n.value.name}`;
      } catch {
        return console.error("Invalid creator actor_id URL:", n.value.actor_id), "#";
      }
    }), b = f(() => {
      try {
        return `${new URL(u.value.actor_id).origin}/c/${u.value.name}`;
      } catch {
        return console.error("Invalid community actor_id URL:", u.value.actor_id), "#";
      }
    }), A = f(() => o.value !== "Loading..." && o.value !== "Post not found or invalid data." && o.value !== "Error loading post."), d = () => {
      window.open(e.url, "_blank");
    };
    function I(g) {
      try {
        const k = new URL(g), z = `${k.protocol}//${k.host}`, B = k.pathname.split("/").filter(Boolean);
        let R = "";
        return B[0] === "post" ? B[1] === "id" ? R = B[2] : R = B[1] : B[0] === "comment" && B[1] === "id" && (R = B[2]), { instanceURL: z, postID: R };
      } catch (k) {
        return console.error("Error parsing URL:", k), { instanceURL: "", postID: "" };
      }
    }
    async function v(g) {
      try {
        const z = await (await fetch(g)).text();
        return new DOMParser().parseFromString(z, "text/html").querySelector("meta[property='og:image']")?.getAttribute("content") || null;
      } catch (k) {
        return console.error("Failed to fetch OG Image:", k), null;
      }
    }
    async function S(g, k) {
      const z = `${g}/api/v3/post?id=${k}`;
      try {
        const B = await fetch(z);
        if (!B.ok)
          throw new Error(`HTTP error! status: ${B.status}`);
        const R = await B.json();
        if (R && R.post_view) {
          const W = R.post_view, q = W.post;
          o.value = q.name, l.value = q.body || "", n.value = W.creator, u.value = W.community, w.value = q.published, C.value = q.thumbnail_url || null, D.value = W.counts.score, y.value = W.counts.comments, !C.value && q.url && !q.body && (C.value = await v(q.url), i = !0);
        } else
          o.value = "Post not found or invalid data.", console.error("Invalid data structure:", R);
      } catch (B) {
        o.value = "Error loading post.", console.error("Error fetching post data:", B);
      }
    }
    function E(g) {
      g.target.src = "https://placehold.co/24";
    }
    function le(g) {
      C.value = null;
    }
    const ce = f(() => ({
      display: "-webkit-box",
      "-webkit-line-clamp": e.titleLines || 2,
      "-webkit-box-orient": "vertical",
      overflow: "hidden",
      "text-overflow": "ellipsis"
    })), de = f(() => ({
      display: "-webkit-box",
      "-webkit-line-clamp": e.excerptLines || 4,
      "-webkit-box-orient": "vertical",
      overflow: "hidden",
      "text-overflow": "ellipsis"
    }));
    return Q(() => {
      const { instanceURL: g, postID: k } = I(e.url);
      g && k ? S(g, k) : o.value = "Invalid URL.";
    }), (g, k) => (t(), r("div", ia, [
      A.value ? (t(), r("div", la, [
        !g.hideUser || !g.hideCommunity ? (t(), r("div", ca, [
          !g.hideUser || !g.hideCommunity ? (t(), r("div", da, [
            a("div", ua, [
              g.hideUser ? p("", !0) : (t(), r("a", {
                key: 0,
                onClick: k[0] || (k[0] = K(() => {
                }, ["stop"])),
                href: $.value,
                title: "User profile",
                class: "lemmy-user-link",
                target: "_blank"
              }, [
                a("div", ha, [
                  a("img", {
                    src: n.value.avatar || "https://placehold.co/24",
                    alt: "User Avatar",
                    onError: E
                  }, null, 40, fa)
                ]),
                a("span", pa, m(n.value.display_name || n.value.name), 1)
              ], 8, ma)),
              !g.hideUser && !g.hideCommunity ? (t(), r("span", ya, "in")) : p("", !0),
              g.hideCommunity ? p("", !0) : (t(), r("a", {
                key: 2,
                onClick: k[1] || (k[1] = K(() => {
                }, ["stop"])),
                href: b.value,
                title: "Community",
                class: "lemmy-community-link",
                target: "_blank"
              }, [
                a("span", ga, m(u.value.name), 1)
              ], 8, _a))
            ])
          ])) : p("", !0),
          a("div", va, [
            a("a", {
              href: e.url,
              target: "_blank",
              title: "View post on Lemmy",
              class: "lemmy-header-icon-link"
            }, [
              M(h(F), {
                icon: "bi:link-45deg",
                class: "lemmy-header-icon",
                width: "24",
                height: "24"
              })
            ], 8, ka),
            a("a", {
              href: h(_),
              target: "_blank",
              title: "Instance",
              class: "lemmy-header-icon-link"
            }, [
              M(h(F), {
                icon: "simple-icons:lemmy",
                class: "lemmy-header-icon",
                width: "24",
                height: "24"
              })
            ], 8, $a)
          ])
        ])) : p("", !0),
        a("div", wa, [
          g.hideTitle ? p("", !0) : (t(), r("h3", {
            key: 0,
            class: "lemmy-card-title",
            style: P(ce.value),
            onClick: d,
            title: "View post on Lemmy"
          }, m(o.value), 5)),
          C.value && !g.hideBanner ? (t(), r("div", {
            key: 1,
            class: "lemmy-card-image",
            onClick: d,
            title: "View post on Lemmy"
          }, [
            a("img", {
              src: C.value,
              alt: "Post Image",
              onError: le
            }, null, 40, Ca)
          ])) : p("", !0),
          l.value && !g.hideExcerpt ? (t(), r("p", {
            key: 2,
            class: "lemmy-card-description",
            style: P(de.value)
          }, m(l.value), 5)) : p("", !0)
        ]),
        !g.hideScore || !g.hideComments || !g.hideDate ? (t(), r("div", ba, [
          g.hideScore ? p("", !0) : (t(), r("div", {
            key: 0,
            class: "lemmy-score",
            onClick: d,
            title: "View post on Lemmy"
          }, [
            a("div", Da, [
              M(h(F), {
                icon: "mingcute:arrow-up-fill",
                class: "lemmy-icon",
                width: "24",
                height: "24"
              }),
              a("span", null, m(D.value), 1)
            ])
          ])),
          g.hideComments ? p("", !0) : (t(), r("div", {
            key: 1,
            class: "lemmy-comments",
            onClick: d,
            title: "View post on Lemmy"
          }, [
            a("div", La, [
              M(h(F), {
                icon: "mdi:comment-outline",
                class: "lemmy-icon",
                width: "24",
                height: "24"
              }),
              a("span", null, m(y.value), 1)
            ])
          ])),
          k[2] || (k[2] = a("div", { class: "lemmy-gap" }, null, -1)),
          g.hideDate ? p("", !0) : (t(), r("div", xa, [
            a("div", Ia, m(s.value), 1)
          ]))
        ])) : p("", !0)
      ])) : (t(), r("div", Ta, [
        a("div", Sa, [
          k[3] || (k[3] = V(" This post could not be loaded. ")),
          k[4] || (k[4] = a("br", null, null, -1)),
          k[5] || (k[5] = V(" It may have been deleted or removed. ")),
          k[6] || (k[6] = a("br", null, null, -1)),
          k[7] || (k[7] = a("br", null, null, -1)),
          k[8] || (k[8] = V(" You can try viewing it ")),
          a("a", {
            href: e.url,
            target: "_blank"
          }, "here", 8, Ba),
          k[9] || (k[9] = V(". "))
        ])
      ]))
    ]));
  }
}), Ea = /* @__PURE__ */ x(Aa, [["__scopeId", "data-v-4e596844"]]), Ua = /* @__PURE__ */ T({
  __name: "EmbedLemmy",
  props: {
    headerTitle: { default: "" },
    headerTitleLines: {},
    headerLink: {},
    headerDate: { default: "" },
    links: {},
    hideUser: { type: Boolean },
    hideCommunity: { type: Boolean },
    hideTitle: { type: Boolean },
    hideBanner: { type: Boolean },
    hideExcerpt: { type: Boolean },
    hideScore: { type: Boolean },
    hideComments: { type: Boolean },
    hideDate: { type: Boolean },
    titleLines: {},
    excerptLines: {}
  },
  setup(c) {
    const e = c, o = f(() => !!(e.headerTitle || e.headerDate || e.headerLink)), {
      links: l,
      hideUser: n,
      hideCommunity: u,
      hideTitle: _,
      hideBanner: w,
      hideExcerpt: C,
      hideScore: D,
      hideComments: y,
      hideDate: i,
      titleLines: s,
      excerptLines: $
    } = e;
    return (b, A) => (t(), U(G, null, {
      default: J(() => [
        o.value ? (t(), U(Z, {
          key: 0,
          title: b.headerTitle,
          date: b.headerDate,
          "title-lines": b.headerTitleLines,
          link: b.headerLink
        }, null, 8, ["title", "date", "title-lines", "link"])) : p("", !0),
        (t(!0), r(O, null, j(h(l), (d, I) => (t(), U(Ea, {
          key: I,
          url: d,
          hideUser: h(n),
          hideCommunity: h(u),
          hideTitle: h(_),
          hideBanner: h(w),
          hideExcerpt: h(C),
          hideScore: h(D),
          hideComments: h(y),
          hideDate: h(i),
          titleLines: h(s),
          excerptLines: h($)
        }, null, 8, ["url", "hideUser", "hideCommunity", "hideTitle", "hideBanner", "hideExcerpt", "hideScore", "hideComments", "hideDate", "titleLines", "excerptLines"]))), 128))
      ]),
      _: 1
    }));
  }
}), Pa = {
  name: "MailchimpEmbed",
  props: {
    actionUrl: {
      type: String,
      required: !0
    },
    hiddenFieldName: {
      type: String,
      required: !0
    },
    showReferral: {
      type: Boolean,
      default: !0
    },
    referralLink: {
      type: String,
      required: function() {
        return this.showReferral;
      }
    },
    title: {
      type: String,
      default: "Subscribe"
    },
    description: {
      type: String,
      default: ""
    },
    buttonText: {
      type: String,
      default: "Subscribe"
    }
  },
  data() {
    return {
      email: "",
      hiddenFieldValue: ""
    };
  },
  mounted() {
    const c = document.createElement("script");
    c.type = "text/javascript", c.src = this.validationScriptUrl, c.async = !0, document.body.appendChild(c), window.fnames = [], window.ftypes = [], window.fnames[0] = "EMAIL", window.ftypes[0] = "email", window.fnames[1] = "FNAME", window.ftypes[1] = "text", window.fnames[2] = "LNAME", window.ftypes[2] = "text", window.fnames[3] = "ADDRESS", window.ftypes[3] = "address", window.fnames[4] = "PHONE", window.ftypes[4] = "phone", window.fnames[5] = "BIRTHDAY", window.ftypes[5] = "birthday", window.fnames[6] = "COMPANY", window.ftypes[6] = "text", window.jQuery && (window.$mcj = window.jQuery.noConflict(!0));
  },
  methods: {
    handleSubmit() {
      this.$el.querySelector("form").submit();
    }
  },
  computed: {
    validationScriptUrl() {
      return "//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js";
    }
  }
}, Ra = { id: "mc_embed_shell" }, Oa = { id: "mailc_embed_signup" }, ja = ["action"], Ma = { id: "mailc_embed_signup_scroll" }, Va = { class: "title" }, Fa = {
  key: 0,
  class: "description"
}, Na = { class: "mc-field-group" }, Ha = {
  "aria-hidden": "true",
  style: { position: "absolute", left: "-5000px" }
}, za = ["name"], qa = { class: "optionalParent" }, Wa = { class: "clear foot" }, Ja = {
  type: "submit",
  name: "subscribe",
  id: "mc-embedded-subscribe",
  class: "button"
}, Ga = {
  key: 0,
  class: "referral"
}, Ka = ["href"];
function Ya(c, e, o, l, n, u) {
  return t(), r("div", Ra, [
    a("div", Oa, [
      a("form", {
        action: o.actionUrl,
        method: "post",
        id: "mc-embedded-subscribe-form",
        name: "mc-embedded-subscribe-form",
        class: "validate",
        target: "_blank",
        onSubmit: e[2] || (e[2] = K((..._) => u.handleSubmit && u.handleSubmit(..._), ["prevent"]))
      }, [
        a("div", Ma, [
          a("div", Va, m(o.title), 1),
          o.description ? (t(), r("div", Fa, [
            a("p", null, m(o.description), 1)
          ])) : p("", !0),
          e[5] || (e[5] = a("div", { class: "indicates-required" }, [
            a("span", { class: "asterisk" }, "*"),
            V(" indicates required ")
          ], -1)),
          a("div", Na, [
            e[3] || (e[3] = a("label", { for: "mce-EMAIL" }, [
              V(" Email Address "),
              a("span", { class: "asterisk" }, "*")
            ], -1)),
            X(a("input", {
              type: "email",
              name: "EMAIL",
              class: "required email",
              id: "mce-EMAIL",
              "onUpdate:modelValue": e[0] || (e[0] = (_) => n.email = _),
              required: ""
            }, null, 512), [
              [ee, n.email]
            ])
          ]),
          e[6] || (e[6] = a("div", {
            id: "mce-responses",
            class: "clear foot"
          }, [
            a("div", {
              class: "response",
              id: "mce-error-response",
              style: { display: "none" }
            }),
            a("div", {
              class: "response",
              id: "mce-success-response",
              style: { display: "none" }
            })
          ], -1)),
          a("div", Ha, [
            X(a("input", {
              type: "text",
              name: o.hiddenFieldName,
              tabindex: "-1",
              "onUpdate:modelValue": e[1] || (e[1] = (_) => n.hiddenFieldValue = _)
            }, null, 8, za), [
              [ee, n.hiddenFieldValue]
            ])
          ]),
          a("div", qa, [
            a("div", Wa, [
              a("button", Ja, m(o.buttonText), 1),
              o.showReferral && o.referralLink ? (t(), r("p", Ga, [
                a("a", {
                  href: o.referralLink,
                  title: "Mailchimp - email marketing made easy and fun"
                }, e[4] || (e[4] = [
                  a("span", { class: "referral-container" }, [
                    a("img", {
                      class: "referral_badge dark-only",
                      src: "https://digitalasset.intuit.com/render/content/dam/intuit/mc-fe/en_us/images/intuit-mc-rewards-text-light.svg",
                      alt: "Intuit Mailchimp"
                    }),
                    a("img", {
                      class: "referral_badge light-only",
                      src: "https://digitalasset.intuit.com/render/content/dam/intuit/mc-fe/en_us/images/intuit-mc-rewards-text-dark.svg",
                      alt: "Intuit Mailchimp"
                    })
                  ], -1)
                ]), 8, Ka)
              ])) : p("", !0)
            ])
          ])
        ])
      ], 40, ja)
    ])
  ]);
}
const Qa = /* @__PURE__ */ x(Pa, [["render", Ya], ["__scopeId", "data-v-aba492b9"]]), Za = { class: "blog-post-list-container" }, Xa = { key: 0 }, en = {
  key: 1,
  class: "cards-container"
}, tn = ["href"], an = { class: "card-content" }, nn = { class: "card-info" }, rn = { class: "post-title" }, sn = { class: "post-meta" }, on = { class: "post-date" }, ln = {
  key: 0,
  class: "post-author"
}, cn = { class: "post-tags" }, dn = {
  key: 0,
  class: "tag"
}, un = { class: "post-excerpt" }, mn = {
  key: 0,
  class: "card-image"
}, hn = ["src"], fn = {
  __name: "BlogPostsVertical",
  props: {
    posts: {
      type: Array,
      required: !1
    },
    renderDrafts: {
      type: Boolean,
      default: !1
    },
    startDate: {
      type: [Date, String],
      default: null
    },
    endDate: {
      type: [Date, String],
      default: null
    },
    format: {
      type: String,
      default: "verticalCards",
      validator: (c) => ["debug", "verticalCards"].includes(c)
    },
    sortOrder: {
      type: String,
      default: "desc",
      validator: (c) => ["asc", "desc"].includes(c)
    },
    featuredOnly: {
      type: Boolean,
      default: !1
    },
    filterAuthors: {
      type: Array,
      default: () => []
    },
    excludeAuthors: {
      type: Array,
      default: () => []
    },
    filterCategories: {
      type: Array,
      default: () => []
    },
    excludeCategories: {
      type: Array,
      default: () => []
    },
    excludeURLs: {
      type: Array,
      default: () => []
    },
    maxCards: {
      type: Number,
      default: null
    }
  },
  setup(c) {
    const e = c, o = H("postsData", []), l = H("authors", {}), n = f(() => e.posts || o), u = f(() => {
      const y = [...n.value];
      return y.sort((i, s) => {
        const $ = new Date(i.frontmatter.date), b = new Date(s.frontmatter.date);
        return e.sortOrder === "asc" ? $ - b : b - $;
      }), y;
    }), _ = f(() => u.value.filter((y) => {
      const { frontmatter: i } = y;
      if (e.featuredOnly && !i.featured || !e.renderDrafts && i.draft)
        return !1;
      const s = new Date(i.date);
      if (e.startDate && s < new Date(e.startDate) || e.endDate && s > new Date(e.endDate) || e.filterAuthors.length > 0 && !e.filterAuthors.includes(i.author) || e.excludeAuthors.length > 0 && e.excludeAuthors.includes(i.author) || e.filterCategories.length > 0 && !e.filterCategories.includes(i.category) || e.excludeCategories.length > 0 && e.excludeCategories.includes(i.category))
        return !1;
      if (e.excludeURLs.length > 0) {
        const $ = y.url.replace(/\.html$/, "");
        if (e.excludeURLs.some((A) => A.replace(/\.html$/, "") === $))
          return !1;
      }
      return !0;
    })), w = f(() => e.maxCards !== null && e.maxCards >= 0 ? _.value.slice(0, e.maxCards) : _.value);
    function C(y) {
      return new Date(y).toLocaleDateString(void 0, {
        year: "numeric",
        month: "long",
        day: "numeric"
      });
    }
    function D(y) {
      const i = l[y];
      return i ? i.name : y;
    }
    return (y, i) => (t(), r("div", Za, [
      c.format === "debug" ? (t(), r("div", Xa, [
        a("pre", null, m(JSON.stringify(w.value, null, 2)), 1)
      ])) : c.format === "verticalCards" ? (t(), r("div", en, [
        (t(!0), r(O, null, j(w.value, (s) => (t(), r("div", {
          key: s.url,
          class: "post-card"
        }, [
          a("a", {
            href: s.url,
            class: "card-link"
          }, [
            a("div", an, [
              a("div", nn, [
                a("div", rn, m(s.frontmatter.title), 1),
                a("div", sn, [
                  a("span", on, m(C(s.frontmatter.date)), 1),
                  s.frontmatter.author ? (t(), r("span", ln, " by " + m(D(s.frontmatter.author)), 1)) : p("", !0)
                ]),
                a("div", cn, [
                  s.frontmatter.category ? (t(), r("span", dn, m(s.frontmatter.category), 1)) : p("", !0)
                ]),
                a("div", un, m(s.frontmatter.excerpt), 1)
              ]),
              s.frontmatter.banner ? (t(), r("div", mn, [
                a("img", {
                  src: s.frontmatter.banner,
                  alt: "Banner Image"
                }, null, 8, hn)
              ])) : p("", !0)
            ])
          ], 8, tn)
        ]))), 128))
      ])) : p("", !0)
    ]));
  }
}, pn = /* @__PURE__ */ x(fn, [["__scopeId", "data-v-64d8a45a"]]), yn = { class: "featured-posts-container" }, _n = { class: "cards-wrapper" }, gn = ["href"], vn = { class: "card-image" }, kn = ["src"], $n = { class: "card-info" }, wn = { class: "post-title" }, Cn = { class: "post-meta" }, bn = { class: "post-date" }, Dn = {
  key: 0,
  class: "post-author"
}, Ln = { class: "post-tags" }, xn = {
  key: 0,
  class: "tag"
}, In = { class: "post-excerpt" }, Tn = {
  __name: "BlogPostsHorizontal",
  props: {
    posts: {
      type: Array,
      required: !1
    },
    renderDrafts: {
      type: Boolean,
      default: !1
    },
    startDate: {
      type: [Date, String],
      default: null
    },
    endDate: {
      type: [Date, String],
      default: null
    },
    sortOrder: {
      type: String,
      default: "desc",
      validator: (c) => ["asc", "desc"].includes(c)
    },
    featuredOnly: {
      type: Boolean,
      default: !1
    },
    filterAuthors: {
      type: Array,
      default: () => []
    },
    excludeAuthors: {
      type: Array,
      default: () => []
    },
    filterCategories: {
      type: Array,
      default: () => []
    },
    excludeCategories: {
      type: Array,
      default: () => []
    },
    excludeURLs: {
      type: Array,
      default: () => []
    },
    maxCards: {
      type: Number,
      default: null
    }
  },
  setup(c) {
    const e = c, o = H("postsData", []), l = H("authors", {}), n = f(() => e.posts || o), u = f(() => {
      const y = [...n.value];
      return y.sort((i, s) => {
        const $ = new Date(i.frontmatter.date), b = new Date(s.frontmatter.date);
        return e.sortOrder === "asc" ? $ - b : b - $;
      }), y;
    }), _ = f(() => u.value.filter((y) => {
      const { frontmatter: i } = y;
      if (e.featuredOnly && !i.featured || !e.renderDrafts && i.draft)
        return !1;
      const s = new Date(i.date);
      if (e.startDate && s < new Date(e.startDate) || e.endDate && s > new Date(e.endDate) || e.filterAuthors.length > 0 && !e.filterAuthors.includes(i.author) || e.excludeAuthors.length > 0 && e.excludeAuthors.includes(i.author) || e.filterCategories.length > 0 && !e.filterCategories.includes(i.category) || e.excludeCategories.length > 0 && e.excludeCategories.includes(i.category))
        return !1;
      if (e.excludeURLs.length > 0) {
        const $ = y.url.replace(/\.html$/, "");
        if (e.excludeURLs.some((A) => A.replace(/\.html$/, "") === $))
          return !1;
      }
      return !0;
    })), w = f(() => e.maxCards !== null && e.maxCards >= 0 ? _.value.slice(0, e.maxCards) : _.value);
    function C(y) {
      return new Date(y).toLocaleDateString(void 0, {
        year: "numeric",
        month: "long",
        day: "numeric"
      });
    }
    function D(y) {
      const i = l[y];
      return i ? i.name : y;
    }
    return (y, i) => (t(), r("div", yn, [
      p("", !0),
      a("div", _n, [
        (t(!0), r(O, null, j(w.value, (s) => (t(), r("div", {
          key: s.url,
          class: "featured-post-card"
        }, [
          a("a", {
            href: s.url,
            class: "card-link"
          }, [
            a("div", vn, [
              s.frontmatter.banner ? (t(), r("img", {
                key: 0,
                src: s.frontmatter.banner,
                alt: "Banner Image"
              }, null, 8, kn)) : p("", !0)
            ]),
            a("div", $n, [
              a("h3", wn, m(s.frontmatter.title), 1),
              a("div", Cn, [
                a("span", bn, m(C(s.frontmatter.date)), 1),
                s.frontmatter.author ? (t(), r("span", Dn, " by " + m(D(s.frontmatter.author)), 1)) : p("", !0)
              ]),
              a("div", Ln, [
                s.frontmatter.category ? (t(), r("span", xn, m(s.frontmatter.category), 1)) : p("", !0)
              ]),
              a("p", In, m(s.frontmatter.excerpt), 1)
            ])
          ], 8, gn)
        ]))), 128))
      ])
    ]));
  }
}, Sn = /* @__PURE__ */ x(Tn, [["__scopeId", "data-v-cf8ebe71"]]), Bn = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BlogPostHeader: it,
  BlogPostList: mt,
  BlogPostsHorizontal: Sn,
  BlogPostsVertical: pn,
  EmbedLemmy: Ua,
  EmbedMailchimpSubscribe: Qa,
  HeaderCard: Z,
  HorizontalCard: se,
  HorizontalContainer: oe,
  ImageCardSquare: ie,
  ImageGallery: oa,
  JSONTable: Wt,
  VerticalCard: Y,
  VerticalContainer: G
}, Symbol.toStringTag, { value: "Module" })), An = 8, On = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  TEST_VALUE: An
}, Symbol.toStringTag, { value: "Module" }));
function En(c) {
  const e = Bn;
  for (const o in e)
    c.component(o, e[o]);
}
const jn = { install: En };
export {
  it as BlogPostHeader,
  mt as BlogPostList,
  Sn as BlogPostsHorizontal,
  pn as BlogPostsVertical,
  Ua as EmbedLemmy,
  Qa as EmbedMailchimpSubscribe,
  Z as HeaderCard,
  se as HorizontalCard,
  oe as HorizontalContainer,
  ie as ImageCardSquare,
  oa as ImageGallery,
  Wt as JSONTable,
  On as MyConstants,
  Y as VerticalCard,
  G as VerticalContainer,
  jn as default,
  lt as formatDate
};
